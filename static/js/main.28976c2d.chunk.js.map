{"version":3,"sources":["components/header.js","components/search-panel.js","components/todo-list-item.js","components/todo-list.js","components/item-status-filter.js","components/item-add-form.js","index.js"],"names":["Header","todoCount","doneCount","SearchPanel","onSearchData","type","placeholder","className","onChange","target","value","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","done","onClick","ToDoList","data","elements","map","item","key","id","ItemStatusFilter","buttons","name","this","props","filter","onChangeFilter","clazz","React","Component","ItemAddForm","state","onLabelChange","setState","inputValue","onSubmit","e","preventDefault","addItem","App","maxId","todoData","createTodoItem","term","deleteItem","text","newItem","toggleImportant","toggleProperty","toggleDone","searchData","items","length","toLowerCase","includes","filterData","arr","propname","idx","findIndex","el","oldItem","slice","visibleItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28976c2d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = ({todoCount, doneCount}) => {\r\n    return(\r\n        <div>\r\n            <h1>Todo App</h1>\r\n            <h5>{doneCount} дел было выполнено, осталось {todoCount}</h5>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport '../styles/search-panel.css';\r\n\r\nconst SearchPanel = ({onSearchData}) => {\r\n\r\n    const onSearch = ({target}) => {\r\n        onSearchData(target.value);\r\n    }\r\n        return <input \r\n        type=\"text\" \r\n        placeholder='Type something here' \r\n        className='form-control'\r\n        onChange={onSearch}/>\r\n}\r\n\r\nexport default SearchPanel;","import React from 'react';\r\n\r\nimport '../styles/todo-list-item.css';\r\n\r\nconst TodoListItem = ({ label, onDeleted, onToggleImportant, onToggleDone, important, done }) => {\r\n\r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if(important) {\r\n            classNames += ' important';\r\n        }\r\n        return(\r\n            <div className=\"d-flex justify-content-between\">\r\n            <span className={classNames} \r\n                onClick={ onToggleDone }>\r\n                {label}\r\n            </span>\r\n            <div className=\"d-flex\">\r\n                <button className='btn btn-outline-success btn-sm mr-3'\r\n                    onClick={onToggleImportant}>\r\n                    <i className='fa fa-exclamation'></i>\r\n                </button>\r\n                <button className='btn btn-outline-danger btn-sm'\r\n                        onClick={onDeleted}>\r\n                    <i className='fa fa-trash-o'></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        ) \r\n \r\n}\r\n\r\nexport default TodoListItem;","import React from 'react';\r\n\r\nimport TodoListItem from './todo-list-item';\r\nimport '../styles/todo-list.css';\r\n\r\nconst ToDoList = ({data, onDeleted, onToggleImportant, onToggleDone}) => {\r\n\r\n    const elements = data.map((item) => {\r\n        return (\r\n            <li key={item.id} className='list-group-item pl-3'>\r\n                <TodoListItem \r\n                    {... item}\r\n                    onDeleted={() => onDeleted(item.id)} \r\n                    onToggleImportant={() => onToggleImportant(item.id)}\r\n                    onToggleDone={() => onToggleDone(item.id)}/>\r\n            </li>\r\n        )\r\n    })\r\n    return (\r\n        <ul className='list-group todo-list mt-3'>\r\n           { elements }\r\n        </ul>\r\n    )\r\n}\r\nexport default ToDoList;","import React from 'react';\r\n\r\nexport default class ItemStatusFilter extends React.Component {\r\n    \r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'},\r\n    ]\r\n    render(){\r\n        const {filter, onChangeFilter} = this.props;\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n            return(\r\n                <button type='button'\r\n                        className={`btn ${clazz}`}\r\n                        key={name}\r\n                        onClick={() => onChangeFilter(name)}>\r\n                        {label}\r\n                </button>\r\n            )\r\n        })\r\n        return(\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../styles/item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component{\r\n    state = {\r\n        label: ''\r\n    };\r\n    onLabelChange = ({target}) => {\r\n        this.setState({\r\n            label: target.value,\r\n            inputValue: ''\r\n        })\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addItem(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        })\r\n    };\r\n    \r\n    render(){\r\n        return(\r\n            <form className=\"item-add-form\"\r\n                  onSubmit={this.onSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"What needs to be done?\"\r\n                    onChange={this.onLabelChange}\r\n                    value={this.state.label}/>\r\n                <button className=\"btn btn-danger\">\r\n                    Add Item\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Header from './components/header';\nimport SearchPanel from './components/search-panel';\nimport ToDoList from './components/todo-list';\nimport ItemStatusFilter from './components/item-status-filter';\nimport ItemAddForm from './components/item-add-form';\n\nexport default class App extends Component{\n\n    maxId = 4;\n    state = {\n        todoData: [\n           this.createTodoItem('Drink coffee'),\n           this.createTodoItem('Make Awesome App'),\n           this.createTodoItem('Have a lunch'),\n        ],\n        term: '',\n        filter: 'all'\n    }\n\n    createTodoItem(label) {\n        return {\n            label,\n            important: false,\n            done: false,\n            id: this.maxId++\n        }\n    }\n\n    deleteItem = (id) => {\n        this.setState(({todoData}) => {\n            const newData = todoData.filter((value) => value.id !== id);\n            return{\n                todoData: newData\n            }\n        });\n    };\n\n    addItem = (text) => {\n        const newItem = this.createTodoItem(text);\n        this.setState(({todoData}) =>{\n            const newArray = [...todoData, newItem];\n            return {\n                todoData: newArray\n            }\n        })\n    }\n\n    toggleProperty(arr, id, propname) {\n        const idx = arr.findIndex((el) => el.id === id);\n            const oldItem = arr[idx];\n\n            const newItem = { ...oldItem, [propname]: !oldItem[propname]};\n\n            const newArray = [  ...arr.slice(0, idx),\n                                newItem,\n                                ...arr.slice(idx + 1) ];\n            return{\n                todoData: newArray\n            }\n    }\n\n    toggleImportant = (id) => {\n        this.setState( ({todoData}) => {\n            return this.toggleProperty(todoData, id, 'important');\n        })\n    }\n    toggleDone = (id) => {\n        this.setState( ({todoData}) => {\n            return this.toggleProperty(todoData, id, 'done');\n        })\n    }\n\n    onSearchData = (term) => {\n        this.setState({term});\n    } \n\n    searchData = (items, term) => {\n        if(term.length === 0){\n            return items;\n        }\n        return items.filter(({label}) => label.toLowerCase().includes(term.toLowerCase()));\n    }\n\n    onChangeFilter = (filter) => {\n        this.setState({filter});\n    }\n    filterData = (items, filter) => {\n        switch(filter) {\n            case 'all': return items;\n            case 'active': return items.filter((item) => !item.done);\n            case 'done': return items.filter((item) => item.done);\n            default: return items;\n        }\n    }\n\n    render(){\n        const {todoData, term, filter} = this.state;\n        const doneCount = todoData.filter((item) => item.done).length;\n        const todoCount = todoData.length - doneCount;\n        const visibleItems = this.filterData(this.searchData(todoData,term), filter);\n        return (\n            <div className='container col-md-5 mt-5'>\n                <Header doneCount={doneCount} todoCount={todoCount}/>\n                <div className='d-flex justify-content-between mt-3'>\n                    <SearchPanel onSearchData={this.onSearchData}/>\n                    <ItemStatusFilter \n                        filter={filter}\n                        onChangeFilter={this.onChangeFilter}/>\n                </div>\n                <ToDoList data = {visibleItems} \n                    onDeleted={this.deleteItem}\n                    onToggleImportant={this.toggleImportant}\n                    onToggleDone={this.toggleDone}/>\n                <ItemAddForm addItem={this.addItem}/>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}